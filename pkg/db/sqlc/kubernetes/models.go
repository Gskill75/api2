// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0

package kubernetesdb

import (
	"database/sql/driver"
	"fmt"

	"github.com/jackc/pgx/v5/pgtype"
)

type KubernetesActionTypeEnum string

const (
	KubernetesActionTypeEnumCreate KubernetesActionTypeEnum = "create"
	KubernetesActionTypeEnumDelete KubernetesActionTypeEnum = "delete"
	KubernetesActionTypeEnumUpdate KubernetesActionTypeEnum = "update"
)

func (e *KubernetesActionTypeEnum) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = KubernetesActionTypeEnum(s)
	case string:
		*e = KubernetesActionTypeEnum(s)
	default:
		return fmt.Errorf("unsupported scan type for KubernetesActionTypeEnum: %T", src)
	}
	return nil
}

type NullKubernetesActionTypeEnum struct {
	KubernetesActionTypeEnum KubernetesActionTypeEnum
	Valid                    bool // Valid is true if KubernetesActionTypeEnum is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullKubernetesActionTypeEnum) Scan(value interface{}) error {
	if value == nil {
		ns.KubernetesActionTypeEnum, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.KubernetesActionTypeEnum.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullKubernetesActionTypeEnum) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.KubernetesActionTypeEnum), nil
}

type KubernetesStatusEnum string

const (
	KubernetesStatusEnumCompleted KubernetesStatusEnum = "completed"
	KubernetesStatusEnumFailed    KubernetesStatusEnum = "failed"
	KubernetesStatusEnumError     KubernetesStatusEnum = "error"
	KubernetesStatusEnumSuccess   KubernetesStatusEnum = "success"
)

func (e *KubernetesStatusEnum) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = KubernetesStatusEnum(s)
	case string:
		*e = KubernetesStatusEnum(s)
	default:
		return fmt.Errorf("unsupported scan type for KubernetesStatusEnum: %T", src)
	}
	return nil
}

type NullKubernetesStatusEnum struct {
	KubernetesStatusEnum KubernetesStatusEnum
	Valid                bool // Valid is true if KubernetesStatusEnum is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullKubernetesStatusEnum) Scan(value interface{}) error {
	if value == nil {
		ns.KubernetesStatusEnum, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.KubernetesStatusEnum.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullKubernetesStatusEnum) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.KubernetesStatusEnum), nil
}

type KubernetesHistory struct {
	ID            int32
	CustomerID    string
	ActionType    KubernetesActionTypeEnum
	Status        KubernetesStatusEnum
	NamespaceName string
	Username      string
	ErrorMessage  pgtype.Text
	CreatedBy     string
	CreatedAt     pgtype.Timestamptz
	CompletedAt   pgtype.Timestamptz
	UpdatedAt     pgtype.Timestamptz
	Details       pgtype.Text
}

type Namespace struct {
	ID         int32
	Name       string
	CustomerID string
	CreatedBy  string
	CreatedAt  pgtype.Timestamp
	UpdatedAt  pgtype.Timestamp
}
