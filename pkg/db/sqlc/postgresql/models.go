// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0

package postgresdb

import (
	"database/sql/driver"
	"fmt"

	"github.com/jackc/pgx/v5/pgtype"
)

type ActionTypeEnum string

const (
	ActionTypeEnumCreate ActionTypeEnum = "create"
	ActionTypeEnumDelete ActionTypeEnum = "delete"
	ActionTypeEnumUpdate ActionTypeEnum = "update"
)

func (e *ActionTypeEnum) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = ActionTypeEnum(s)
	case string:
		*e = ActionTypeEnum(s)
	default:
		return fmt.Errorf("unsupported scan type for ActionTypeEnum: %T", src)
	}
	return nil
}

type NullActionTypeEnum struct {
	ActionTypeEnum ActionTypeEnum
	Valid          bool // Valid is true if ActionTypeEnum is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullActionTypeEnum) Scan(value interface{}) error {
	if value == nil {
		ns.ActionTypeEnum, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.ActionTypeEnum.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullActionTypeEnum) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.ActionTypeEnum), nil
}

type AwxStatusEnum string

const (
	AwxStatusEnumPending    AwxStatusEnum = "pending"
	AwxStatusEnumWaiting    AwxStatusEnum = "waiting"
	AwxStatusEnumRunning    AwxStatusEnum = "running"
	AwxStatusEnumSuccessful AwxStatusEnum = "successful"
	AwxStatusEnumFailed     AwxStatusEnum = "failed"
	AwxStatusEnumError      AwxStatusEnum = "error"
	AwxStatusEnumCanceled   AwxStatusEnum = "canceled"
)

func (e *AwxStatusEnum) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = AwxStatusEnum(s)
	case string:
		*e = AwxStatusEnum(s)
	default:
		return fmt.Errorf("unsupported scan type for AwxStatusEnum: %T", src)
	}
	return nil
}

type NullAwxStatusEnum struct {
	AwxStatusEnum AwxStatusEnum
	Valid         bool // Valid is true if AwxStatusEnum is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullAwxStatusEnum) Scan(value interface{}) error {
	if value == nil {
		ns.AwxStatusEnum, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.AwxStatusEnum.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullAwxStatusEnum) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.AwxStatusEnum), nil
}

type StatusEnum string

const (
	StatusEnumPending   StatusEnum = "pending"
	StatusEnumRunning   StatusEnum = "running"
	StatusEnumCompleted StatusEnum = "completed"
	StatusEnumFailed    StatusEnum = "failed"
	StatusEnumCanceled  StatusEnum = "canceled"
	StatusEnumError     StatusEnum = "error"
)

func (e *StatusEnum) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = StatusEnum(s)
	case string:
		*e = StatusEnum(s)
	default:
		return fmt.Errorf("unsupported scan type for StatusEnum: %T", src)
	}
	return nil
}

type NullStatusEnum struct {
	StatusEnum StatusEnum
	Valid      bool // Valid is true if StatusEnum is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullStatusEnum) Scan(value interface{}) error {
	if value == nil {
		ns.StatusEnum, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.StatusEnum.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullStatusEnum) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.StatusEnum), nil
}

type AwxHistory struct {
	ID              int32
	CustomerID      string
	AwxJobID        pgtype.Int8
	AwxTemplateName pgtype.Text
	AwxTemplateID   pgtype.Int4
	ActionType      ActionTypeEnum
	Status          StatusEnum
	InstanceName    string
	Username        pgtype.Text
	ExtraVars       []byte
	AwxStatus       NullAwxStatusEnum
	ErrorMessage    pgtype.Text
	CreatedBy       string
	CreatedAt       pgtype.Timestamptz
	CompletedAt     pgtype.Timestamptz
	UpdatedAt       pgtype.Timestamptz
}

type DbInstance struct {
	ID           int32
	CustomerID   string
	DbType       string
	Version      pgtype.Text
	Host         pgtype.Text
	Port         pgtype.Int4
	Username     pgtype.Text
	Status       StatusEnum
	InstanceName string
	CreatedBy    string
	CreatedAt    pgtype.Timestamptz
	UpdatedAt    pgtype.Timestamptz
	DeletedAt    pgtype.Timestamptz
}

type DbaasOffer struct {
	ID        int32
	OfferType string
	Active    bool
}
